
Below is a detailed plaintext architecture diagram, illustrating the system components, redundancy, and data flow.

```
                                +----------------------+
                                |      Load Balancer   |
                                +----------------------+
                                           |
                              +------------+-----------+
                              |                        |
                     +-------------------+   +-------------------+
                     |    API Servers    |   |    API Servers    |   (Redundant)
                     +-------------------+   +-------------------+
                              |                        |
                              |                        |
                      +-------+-------+        +-------+-------+
                      |               |        |               |
             +----------------+  +----------------+  +----------------+
             | Authentication |  |   Video Upload |  |   Video Stream |
             |     Service    |  |    Service     |  |     Service    |
             +----------------+  +----------------+  +----------------+
                      |               |                     |
                      |               |                     |
          +-----------+               |                     |
          |                           |                     |
+----------------+           +--------+-------+     +-------+-------+
| User Database  |           | Video Processing|     | Content Delivery|
|   (SQL/NoSQL)  |           |     Service     |     |    Network     |
+----------------+           +-----------------+     +---------------+
    (Master-Slave)                (Redundant)            (CDN, Edge Servers)
       (Sharded)                                              (Redundant)
          |                           |                     |
          |                           |                     |
          |                   +-------+-------+             |
          |                   |               |             |
          |           +----------------+ +----------------+ |
          |           | Encoding Service| | Thumbnail Gen | |
          |           +----------------+ +----------------+ |
          |                   |               |             |
          |                   |               |             |
          |            +------+-------+ +------+-------+     |
          |            |              | |              |     |
          |     +--------------+ +--------------+ +--------------+
          |     | Video Storage| | Image Storage| | Metadata Store|
          |     |   (Blob)     | |    (Blob)    | |   (NoSQL)     |
          |     +--------------+ +--------------+ +--------------+
          |            (Redundant, Replicated Storage)           |
          |                                                      |
          +------------------------------------------------------+
```



```

Here are some design patterns to choose from:

Option: generic 

+--------------------------------------------------+
|                   User Clients                   |
|          (Web Browsers and API Consumers)        |
+--------------------------------------------------+
                   ↑                               |
                   |                               |
         [R] Read Response                 [W] Write Request
        (Redirection)                      (Shorten URL)
                   |                               |
                   |                               V
    +--------------------------------------------------+
    |                    API Gateway                   |
    |                +------------------+              |
    |                |  Rate Limiter    |              |
    |                |      [R][W]      |              |
    |                +------------------+              |
    +--------------------------------------------------+
                   ↑                               |
                   |                               |
         [R] Forward Response               [W] Forward Request
                   |                               |
                   |                               V
    +--------------------------------------------------+
    |                  Load Balancer                   |
    +--------------------------------------------------+
                   ↑                               |
                   |                               |
         [R] Forward Response               [W] Distribute Request
                   |                               |
                   |                               V
    +--------------------------------------------------+
    |               Application Servers                |
    +--------------------------------------------------+
                   ↑               |                 |
                   |               |                 |
         [R] Read from Cache       |      [W] Write to Cache
                   |               |                 |
                   |               |                 V
    +--------------+---------------+-----------------+
    |              |                                 |
    |        +-----+-----+                   +-------+-------+
    |        |   Cache   |<----------------->|    Database   |
    |        |  (Redis)  |       [R][W]      | (URL Mappings)|
    |        |  [R][W]   |                   |    [R][W]     |
    |        +-----+-----+                   +-------+-------+
    |              ^                                 ^
    |              |                                 |
    |              |                                 |
    |              |                                 |
    |              |                                 V
    |              |                          +--------------------+
    |              |                          |  Analytics Service |
    |              |                          |        [W]         |
    |              |                          +--------------------+
    |              |                                 |
    |              |                                 V
    |              |                          +--------------------+
    |              |                          | Authentication     |
    |              |                          |    Service [R]     |
    |              |                          +--------------------+
    +--------------+----------------------------------------------+
                   |
                   V
    +--------------------------------------------------+
    |                     CDN [R]                      |
    +--------------------------------------------------+
                   ↑
                   |
         [R] Serve Static Assets
                   |
                   V
    +--------------------------------------------------+
    |                   User Clients                   |
    +--------------------------------------------------+

+--------------------------------------------------+
|                    Producers                     |
+--------------------------------------------------+
               |       ↑
               |       |
       [W] Write Request
               |       |
               V       |
+--------------------------------------------------+
|                     Broker                       |
|                (Multiple Instances)              |
|          +---------------------------+           |
|          |    Partitions & Segments   |          |
|          +---------------------------+           |
|                    [W][R]                       |
+--------------------------------------------------+
               |       ↑
               |       |
   [Acknowledgment]    | [R] Read Request
               |       |
               V       |
+--------------------------------------------------+
|                 Cluster Manager                  |
+--------------------------------------------------+
               |       ↑
               |       |
               |       V
+--------------------------------------------------+
|                Consumer Manager                  |
+--------------------------------------------------+
               |       ↑
               |       |
       [W][R] to Storage (DB)
               |       |
               V       |
+--------------------------------------------------+
|      Storage (Relational Database) [R][W]        |
+--------------------------------------------------+
               |       ↑
               |       |
               |       V
+--------------------------------------------------+
|                    Consumers                     |
+--------------------------------------------------+




Option: Ticketmaster:
+---------------------------------------------+
|                   Client                    |
+---------------------------------------------+
                    ↑
                    |
                  [View Events]    [Reserve Ticket]
                    |                   |
                    V                   V
+---------------------------------------------+
|                API Gateway                  |
| - Authentication                            |
| - Rate Limiting                             |
| - Routing                                   |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|               Search Service                |
|                                             |
|  GET /search?term={term}&location={location}&type={type}&date={date} -> Partial<Event>[] |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+         +-------------------------+
|             Elasticsearch                  |         |      Redis (Event Cache) |
| - Index on name, description,               |<------->|                         |
|   venue, performer, date                    |         +-------------------------+
| - Node query caching enabled                |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+         +--------------------------+
|               Database (PostgreSQL)         |<------->|    Redis (Ticket Lock)    |
| - Event                                      |         | TTL: 10 min              |
|    - id, venueId, performerId, tickets[]     |         +--------------------------+
|    - name, description, etc.                 |
| - Venue                                      |
|    - id, location, seatMap                   |
| - Performer                                  |
|    - id, name, etc.                          |
| - Ticket                                     |
|    - id, eventId, seat, price, status        |
| - Booking                                    |
|    - id, userId, tickets[]                   |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|               Event Service                 |
|                                             |
| view(eventId)                               |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|               Booking Service               |
| - Virtual Waiting Queue                     |
| - Ticket Lock                               |
|                                             |
| reserve(ticketId, userId)                   |
| confirm(ticketId, userId, paymentDetails)   |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|                  Stripe                     |
| - Payment Processing                        |
+---------------------------------------------+

Option: Uber:


+---------------------------------------------+
|           Rider Client (iOS/Android)        |
+---------------------------------------------+
                    ↑
                    |
      getFareEstimate(), acceptOrDeclineRide()
                    |
                    V
+---------------------------------------------+
|       API Gateway & Load Balancer           |
| - Routing                                   |
| - Authentication                            |
| - Rate Limiting                             |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|                Ride Service                 |
| - Handles fare estimation                   |
| - Handles ride creation                     |
| - Triggers matching workflow                |
| - Updates DB with driver accept/decline     |
+---------------------------------------------+
                    ↑              ↑             ↑
                    |              |             |
                    |              |             |
       +------------+              |             |
       |                           |             |
       |             +-------------------+       |
       |             | Match Queue        |       |
       |             +-------------------+       |
       |                           |             |
       |                           |             |
       |                           |             |
       |                           V             |
       |             +-------------------+       |
       |             | Ride Matching      |       |
       |             | Service            |       |
       |             | - Matches drivers  |       |
       |             |   and riders       |       |
       |             +-------------------+       |
       |                           |             |
       |                           |             |
       |                           V             |
       |             +-------------------+       |
       |             | Location Service   |       |
       |             | - Stores drivers'  |       |
       |             |   current locations|
       |             |   as lat/long      |       |
       |             +-------------------+       |
       |                           |             |
       |                           |             |
       V                           V             V
+-----------------------+    +--------------------------+
|   Distributed Lock     |    |   Location DB (Redis)    |
|   (Redis)              |    | - Fetch closest drivers  |
| - Check if a driver    |    |                          |
|   has an outstanding   |    |                          |
|   ride request         |    |                          |
+-----------------------+    +--------------------------+

                    ↑
                    |
                    V
+---------------------------------------------+
| DB (DynamoDB or PostgreSQL)                 |
| - Stores Fare & Ride objects                |
|   Ride:                                     |
|     - rideId, riderId, driverId, fareId,    |
|       source, destination, status, etc.     |
|   Fare:                                     |
|     - id, userId, source, destination,      |
|       price, eta, etc.                      |
+---------------------------------------------+
                    |
                    V
+---------------------------------------------+
|       Notification Service (APN, FCM)       |
| - Send driver notification to               |
|   accept/decline ride                       |
+---------------------------------------------+
                    |
                    V
+---------------------------------------------+
|        Driver Client (iOS/Android)          |
+---------------------------------------------+

+---------------------------------------------+
|          3rd Party Mapping Service          |
+---------------------------------------------+
                    ↑
                    |
                    |
                    V
+---------------------------------------------+
|               Ride Service                  |
+---------------------------------------------+


Option:Dropbox

+---------------------------------------------+
|                Uploader                     |
| - Chunk file on client & calculate          |
|   fingerprints                              |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|        API Gateway & Load Balancer          |
| - Routing                                   |
| - Authentication                            |
| - Rate Limiting                             |
+---------------------------------------------+
                    ↑                ↑
                    |                |
        Download File                | getPresignedUrl()
                    |                |
                    V                |
+---------------------------------------------+         +-----------------------+
|                 Downloader                  |         |         S3            |
+---------------------------------------------+         | - Stores the actual   |
                    ↑                ↑                 |   file                |
                    |                |                 +-----------------------+
                    |                |                        ↑
                    |                |                        |
                    V                |                        |
+---------------------------------------------+         +-----------------------+
|               File Service                  |<--------|   File Metadata DB    |
|                                             |         | - FileMetadata        |
|                                             |         |   - fileId (PK)       |
|                                             |         |   - name              |
+---------------------------------------------+         |   - size              |
                    |                                  |   - mimeType          |
                    |                                  |   - uploadedBy        |
                    |                                  |   - status            |
                    |                                  |   - s3Url (link to     |
                    |                                  |     file in S3)        |
                    V                                  |   - chunks: Chunk[]    |
+---------------------------------------------+         |                       |
|                    CDN                      |<--------| - SharedFiles         |
| - Cache frequently accessed files            |         |   - userId (PK)       |
+---------------------------------------------+         |   - fileId            |
                                                        +-----------------------+
                               
                    ↑                                  
                    |
                    V
+-------------------------------------------------------------+
|              Upload file chunks directly to S3               |
|                via pre-signed URL                            |
+-------------------------------------------------------------+
                    ↑
                    |
                    |
+-------------------------------------------------------------+
|         S3 Notification on completed upload                 |
+-------------------------------------------------------------+

Option:Ad Click Aggregator

+---------------------------------------------+
|                  Browser                    |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|          LB & API Gateway                   |
+---------------------------------------------+
                    ↑
                    |         [Generate Ad Impression ID as Idempotency Key]
                    |         and store in cache
                    |
                    V
+---------------------------------------------+         +-----------------------+
|        Ad Placement Service                 |<------->|        Ad DB           |
+---------------------------------------------+         | - Advertisement:       |
                    ↑                                  |   - AdId                |
                    |                                  |   - RedirectUrl         |
                    |                                  |   - ... metadata        |
                    |                                  +-----------------------+
                    |
                    V
+---------------------------------------------+
|                  Cache                      |
+---------------------------------------------+
                    |
                    |
                    V
+---------------------------------------------+
|            Click Processor                  |
+---------------------------------------------+
                    |
                    |
                    V
+---------------------------------------------+
|                Kinesis                      |
| - Partition by AdId (Celebrity Solution     |
|   for Hot Shards)                           |
| - 7-day retention period on Kinesis         |
+---------------------------------------------+
                    |
                    |
                    V
+---------------------------------------------+         +-----------------------+
|                Flink                        |<------->|  Raw Click Data (S3)   |
+---------------------------------------------+         +-----------------------+
                    |
                    |
                    V
+---------------------------------------------+         +-----------------------+
|               OLAP DB                       |<------->|   Reconciliation       |
| - Aggregated Data:                          |         |   Worker               |
|   - AdId                                    |         | - Potentially fix      |
|   - AdvertiserId (PK)                       |         |   incorrect records    |
|   - Minute (SK)                             |         +-----------------------+
|   - Click Count                             |
+---------------------------------------------+
                    ↑
                    |
                    |
+---------------------------------------------+
|           Analytics Service                 |
+---------------------------------------------+
                    ↑
                    |
                    |
+---------------------------------------------+
|           Analyst Browser                   |
+---------------------------------------------+

                    |
                    V
+---------------------------------------------+
|               Spark (Map Reduce)            |
| - Scheduled by cron                         |
+---------------------------------------------+

Option:Web Crawler
+---------------------------------------------+
|                    DNS                      |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+
|                 Webpage                     |
+---------------------------------------------+
                    ↑
                    |
                    V
+---------------------------------------------+         +-----------------------+
|                 Crawler                     |<------->|       S3 HTML Data    |
| - Fetch & store webpage                     |         | - Stores raw HTML     |
+---------------------------------------------+         +-----------------------+
                    ↑                                  |
                    |                                  |
                    | Save raw HTML                    |
                    |                                  |
                    V                                  |
+---------------------------------------------+         +-----------------------+
|              URL Metadata                   |<------->|   Parsing Queue (SQS)  |
| - URL:                                      |         +-----------------------+
|   - id, url, s3Link, lastCrawlTime,         |               ↑
|     hash (GSI), depth                       |               |
| - Domain:                                   |               |
|   - domain, lastCrawlTime, robots           |               |
+---------------------------------------------+               |
                    ↑                                       |
                    | Update URL status                     |
                    |                                       |
                    V                                       |
+---------------------------------------------+              | Fetch s3Url
|      Frontier Queue (SQS)                   |              |
| - Retry on failure w/ backoff               |              |
| - Put extracted URLs back on the queue      |              |
+---------------------------------------------+              V
                    ↑                                  +-----------------------+
                    |                                  |    Parsing Worker      |
                    |                                  | - Download HTML from S3 |
                    |                                  | - Save parsed text to S3|
                    |                                  | - Check hash first      |
                    |                                  +-----------------------+
                    |
                    |
                    V
+---------------------------------------------+
|          Rate Limiter & DNS Cache           |
| - Use same Redis cluster                    |
+---------------------------------------------+

+---------------------------------------------+
|                  DLQ                        |
+---------------------------------------------+

Option:Top-K Youtube Videos
+---------------------+         +----------------------+         +--------------------+         +--------------------+
|     Load Balancer    | ----->  |    Top-K Service      | ----->  |     Top-K Cache     | ----->  |    Snapshot (Blob   |
|                     |         |                      |         |                    |         |      Storage)       |
+---------------------+         +----------------------+         +--------------------+         +--------------------+
                                      |                                          |                              |
                                      V                                          V                              V
                            +---------------------+               +---------------------+         +---------------------+
                            |      Counter        |               |      Counter        |         |   View Stream (Kafka)|
                            | +----------------+  |               | +----------------+  |         +---------------------+
                            | | Hour Top-K Heap |  |               | | Hour Top-K Heap |  |
                            | +----------------+  |               | +----------------+  |
                            | +----------------+  |               | +----------------+  |
                            | |   Hour Counts   |  |               | |   Hour Counts   |  |
                            | +----------------+  |               | +----------------+  |
                            | +----------------+  |               | +----------------+  |
                            | |  Day Top-K Heap |  |               | |  Day Top-K Heap |  |
                            | +----------------+  |               | +----------------+  |
                            | +----------------+  |               | +----------------+  |
                            | |   Day Counts    |  |               | |   Day Counts    |  |
                            | +----------------+  |               | +----------------+  |
                            +---------------------+               +---------------------+


Option:leetcode:

+----------------------------+       +---------------------+       +--------------------------------------------------------+
|    Client - Simple          | ----> |    Primary Server    | ----> |             Primary DB (DynamoDB)                      |
|    Monaco IDE               |       |                     |       |   Problem:                                              |
|  - GET /problems            |       |                     |       |   - id, description, code stubs, test cases             |
|  - GET /problem/{id}        |       |                     |       |   - metadata                                            |
|  - POST /problems/{id}/submit|       |                     |       |   Submissions:                                          |
|  - GET /leaderboard/{compId} |       |                     |       |   - id, submittedAt, test case results, runtime         |
|  - GET /check/{id}           |       |                     |       |   - error?                                              |
+----------------------------+       +---------------------+       +--------------------------------------------------------+
                |                                                           |
                |                                                           V
                |                                          +-------------------------------+
                |                                          |   Redis (Leaderboard Sorted Set)|
                |                                          +-------------------------------+
                |
                V
+--------------------------------------------------------+
|                     AWS SQS                            |
|          (Queue for processing submissions)            |
+--------------------------------------------------------+
                |
                V
+--------------------------------------------------------+
|                       Worker                           |
|  - Processes submission data                           |
|  - Executes test cases using runtime services          |
+--------------------------------------------------------+
                |
                V
+---------------------------------------------------------------------------------------------------+
|                                  AWS Fargate                                                      |
|                                                                                                   |
| +-------------------+   +-------------------+   +-------------------+   +---------------------+   |
| | Java Runtime       |   | Python Runtime    |   | JavaScript Runtime|   | X Runtime Service   |   |
| | Service            |   | Service           |   | Service           |   |                     |   |
+----------------------+   +-------------------+   +-------------------+   +---------------------+   |
                                                                                                   |
|                         Security:                                                                |
|                         - Docker for isolation                                                   |
|                         - Read-only filesystem (writes to tmp)                                   |
|                         - CPU and memory bounds                                                  |
|                         - Explicit timeout per execution                                         |
|                         - VPC for network controls                                               |
|                         - No system calls (seccomp)                                              |
|                         - Configured with necessary runtime environments, test harnesses,        |
|                           and language dependencies                                              |
+---------------------------------------------------------------------------------------------------+



Option:Facebook live comments 

+-----------------------+                +-----------------+                +-------------------------+
| Commenter Client       |<-------------->|  Load Balancer  |<-------------->| Comment Management       |
|                       |                |                 |                | Service                  |
| - for /create (HTTPS)  |                |                 |                |                         |
| - for comment          |                |                 |                | - When a new comment     |
|   broadcasting (SSE)   |                |                 |                |   is posted, persist in  |
+-----------------------+                +-----------------+                |   DB and send over SSE   |
                                                                              |   to connected clients   |
                                                                              +-------------------------+
                                                                                       |
                                                                                       V
+---------------------+                 +-----------------------------+                +-----------------------------+
| Pagination Cache    |<--------------->|   Comments DB (DynamoDB)     |<-------------->|  Comment Management Service  |
| (Redis)             |                 |                               |                |                             |
| - Keeps fetched     |                 |   - commentId                |                | - Stores data persistently  |
|   paged comments    |                 |   - videoId (PK)             |                |   and serves client         |
|   in memory with    |                 |   - content                  |                |   requests                  |
|   short TTL to      |                 |   - author                   |                +-----------------------------+
|   improve infinite  |                 |   - createdAt (SK)           |
|   scrolling         |                 |                               |
+---------------------+                 +-----------------------------+


+---------------------+                     +---------------------+                       +--------------------+
|     API Gateway      |<------------------->|     Post Service     |<-------------------->|  Post Create Queue  |
| - Entry point for    | - /createPost (POST)| - Processes new      |                       | - Holds newly created|
|   all client requests|                     |   post creation      |                       |   posts before      |
| - Routes API calls   |                     | - Caches post in     |                       |   processing        |
|   to appropriate     |                     |   Redis and persists |                       +--------------------+
|   services           |                     |   post in DynamoDB   |
|                     |                     | - Sends new posts    |
+---------------------+                     |   to Post Queue      |
      |                                     +---------------------+                               
      V                                                                                             
+---------------------+                     +---------------------+                       +--------------------+
|   Follow Service    |<------------------->|     Feed Service     |<-------------------->|    Feed Workers     |
| - /follow (POST)    | - /getFeed (GET)    | - /updateFeed (POST) |                       | - Process posts from|
| - Manages follow    | - Retrieves feed    | - Retrieves feeds for|                       |   Post Queue        |
|   relationships     |   data for user     |   users              |                       | - Update user feeds |
| - /unfollow (POST)  | - Interacts with    | - Updates feeds when |                       |   in DynamoDB and   |
| - Updates follow    |   Redis and         |   new posts are      |                       |   Redis             |
|   relationships in  |   DynamoDB          |   created or updated |                       +--------------------+
|   DynamoDB Follow   |                     | - Caches feed data in|                                |
|   Table             |                     |   Redis              |                                |
+---------------------+                     +---------------------+                                |
      |                                            |                                                  |
      V                                            V                                                  V
+---------------------+                     +---------------------+                       +--------------------+
|  Redis (Feed Cache) |                     |   Redis (Post Cache) |                       |     DynamoDB        |
| - Caches user feed  |                     | - Caches post data   |                       | - Post Table        |
|   data to improve   |                     |   for quicker access |                       |   - Stores post     |
|   response times    |                     | - Reduces load on    |                       |     information     |
| - Used by Feed      |                     |   DynamoDB Post Table|                       | - Feed Table        |
|   Service for quick |                     |                      |                       |   - Stores feed data|
|   feed retrieval    |                     |                      |                       |     for users       |
+---------------------+                     +---------------------+                       | - Follow Table      |
                                                                                          |   - Stores follow    |
                                                                                          |     relationships    |
                                                                                          +--------------------+

Option:Facebook newsfeed


+---------------------+                     +---------------------+                       +--------------------+
|     API Gateway      |<------------------->|     Post Service     |<-------------------->|  Post Create Queue  |
| - Entry point for    | - /createPost (POST)| - Processes new      |                       | - Holds newly created|
|   all client requests|                     |   post creation      |                       |   posts before      |
| - Routes API calls   |                     | - Caches post in     |                       |   processing        |
|   to appropriate     |                     |   Redis and persists |                       +--------------------+
|   services           |                     |   post in DynamoDB   |
|                     |                     | - Sends new posts    |
+---------------------+                     |   to Post Queue      |
      |                                     +---------------------+                               
      V                                                                                             
+---------------------+                     +---------------------+                       +--------------------+
|   Follow Service    |<------------------->|     Feed Service     |<-------------------->|    Feed Workers     |
| - /follow (POST)    | - /getFeed (GET)    | - /updateFeed (POST) |                       | - Process posts from|
| - Manages follow    | - Retrieves feed    | - Retrieves feeds for|                       |   Post Queue        |
|   relationships     |   data for user     |   users              |                       | - Update user feeds |
| - /unfollow (POST)  | - Interacts with    | - Updates feeds when |                       |   in DynamoDB and   |
| - Updates follow    |   Redis and         |   new posts are      |                       |   Redis             |
|   relationships in  |   DynamoDB          |   created or updated |                       +--------------------+
|   DynamoDB Follow   |                     | - Caches feed data in|                                |
|   Table             |                     |   Redis              |                                |
+---------------------+                     +---------------------+                                |
      |                                            |                                                  |
      V                                            V                                                  V
+---------------------+                     +---------------------+                       +--------------------+
|  Redis (Feed Cache) |                     |   Redis (Post Cache) |                       |     DynamoDB        |
| - Caches user feed  |                     | - Caches post data   |                       | - Post Table        |
|   data to improve   |                     |   for quicker access |                       |   - Stores post     |
|   response times    |                     | - Reduces load on    |                       |     information     |
| - Used by Feed      |                     |   DynamoDB Post Table|                       | - Feed Table        |
|   Service for quick |                     |                      |                       |   - Stores feed data|
|   feed retrieval    |                     |                      |                       |     for users       |
+---------------------+                     +---------------------+                       | - Follow Table      |
                                                                                          |   - Stores follow    |
                                                                                          |     relationships    |
                                                                                          +--------------------+

Option:Facebook post search
+-----------------------+                     +-----------------------+                       +------------------------+
|     Post Service       |                     |      Like Service      |                       |      Like Batcher       |
| - /createPost          |                     | - /likePost            |                       | - Batches likes for     |
| - Sends post creation  |                     | - Sends like events    |                       |   ingestion             |
|   requests             |                     |                       |                       +------------------------+
+-----------------------+                     +-----------------------+                               |
       |                                      create Posts               create Likes                  V
       |                                               \                     /                       +------------------------+
       |                                                \                   /                        |        Kafka           |
       |                                                 \                 /                         | - Asynchronous event   |
       |                                                  V               V                          |   stream for posts and |
       |                                              +-------------------------+                    |   likes                |
       |                                              |      Load Balancer       |                    +------------------------+
       |                                              +-------------------------+                             |
       |                                                        |                                             |
       |                                                        |                                             |
       V                                                        |                                             V
+--------------------+                                  +------------------------+                    +------------------------+
|     Event Writer   | -------------------------------->|      Ingestion Service  |<------------------|    Cold Indexes         |
|  - Writes events   |                                  | - Processes events     |                    |    (Blob Storage)       |
|    to Kafka        |                                  |   and updates indexes  |                    +------------------------+
+--------------------+                                  +------------------------+
                                                                     |
                                                                     |
                                                                     V
                                                           +---------------------+
                                                           |     Index (Redis)    |
                                                           | - Stores PostId by   |
                                                           |   Creation, Likes    |
                                                           |   for search queries |
                                                           +---------------------+
                                                                     |
                                                                     |
                                                                     V
+---------------------+                      +---------------------+                        +---------------------+
|    Search Cache     |<-------------------->|   Search Service     |<----------------------|     API Gateway      |
|    (Redis)          |                      | - Executes search    |                       |  - Routes requests  |
| - Caches search     |                      |   queries based on   |                       |    to search service|
|   results to reduce |                      |   keyword, likes, or |                       +---------------------+
|   load              |                      |   time               |
+---------------------+                      +---------------------+
                                                                     |
                                                                     |
                                                                     V
+---------------------+                      +---------------------+
|        Client       |                      |      CDN             |
| - Initiates search  |                      | - Serves static      |
|   query via API     |                      |   assets and         |
|                     |                      |   caches results     |
+---------------------+                      +---------------------+




Option:Local delivery like doordash, uber eats, gopuff

+---------------------------+                     +-------------------------+                      +------------------------+
|        API Gateway         |                     |      Availability       |                      |      Inventory Table    |
| - Entry point for requests |                     |       Service           |<-------------------->| - Stores inventory data|
| - Routes order and         |<------------------->| - Fetches item quantity  |                      | - Sharded by region ID |
|   availability queries     |                     |   for items              |                      | - Read replicas for    |
|                            |                     | - Queries Inventory Table|                      |   faster reads         |
+---------------------------+                     |   for availability across|                      +------------------------+
     |                                             |   nearby distribution    |                                 ^
     |                                             |   centers (DCs)          |                                 |
     |                                             +-------------------------+                                 |
     |                                                      |                                               |
     |                                                      | Check item availability                       |
     |                                                      |                                               |
     V                                                      V                                               V
+------------------------+                      +---------------------------+                   +------------------------+
|   GET /availability    |                      |      Nearby Service        |<---------------->|      Postgres Leader    |
|   ?lat=LAT&long=LONG   |                      | - Finds nearby DCs         |                   | - Main database for    |
|   &items=ITEM1,ITEM2   |                      | - Integrates with Travel   |                   |   transactions         |
|   Fetch availability   |                      |   Time Service for DC ETA  |                   | - Handles write ops for|
+------------------------+                      +---------------------------+                   |   Inventory and Orders |
                                                                                                 +------------------------+
                                                                                                 +------------------------+
                                                                                                 |   Orders Table          |
                                                                                                 | - Stores all order data |
                                                                                                 +------------------------+
                                                     |
                                                     | Fetch travel time from DC to customer
                                                     V
                                          +---------------------------+
                                          |      Travel Time Service   |
                                          | - Estimates time from      |
                                          |   nearest DC to delivery   |
                                          |   address                  |
                                          +---------------------------+

                                                     |
                                                     |
                                                     V
                                          +---------------------------+
                                          |      Orders Service        |
                                          | - Receives orders and writes|
                                          |   them to the Orders Table |
                                          | - Queries Availability for |
                                          |   stock availability       |
                                          | - Writes order transactions|
                                          +---------------------------+
                                                     ^
                                                     |
                                                     |
                                                     |
+------------------------+                      +---------------------------+
|   POST /order          |                      |      Availability Service  |
|   {                    |<------------------->| - Checks stock levels for  |
|    lat: LAT,           |                      |   new orders               |
|    long: LONG,         |                      +---------------------------+
|    items: ITEM1,       |
|            ITEM2,      |
|   }                    |
|   Place new order      |
+------------------------+


Option:Tinder: (dating app)

+-----------------------------+                +-----------------------------+                     +-----------------------------+
|           Client            |                |   API Gateway & Load Balancer|                     |   Push Notification Service |
|  - swipe(yes/no)            |                | - Routing                    |                     | - Sends notifications for   |
|  - getStack()               |                | - Authentication             |                     |   matches via APNs/FCM      |
|  - setProfile()             |                | - Rate Limiting              |                     |                             |
|                             |                | - Routes to Profile/Swipe    |                     |                             |
|  User interacts with app    |--------------->|   services                   |<-------------------+                             |
+-----------------------------+                +-----------------------------+                     +-----------------------------+
                                                                                                    ^
                                                                                                    |
                                                                                                    |
                                                                                                    |  Sends push notifications for
                        swipe(yes/no), getStack(), setProfile()                                     |  matches
                                     |                                                              |
                                     V                                                              |
+-----------------------------+                +-----------------------------+                     +-----------------------------+
|        Swipe Service        |                |       Profile Service       |                     |       Swipe Cache           |
| - Handles swipe actions     |                | - setProfile(), getStack()  |                     | - Bloom filter for swipes   |
| - swipe(yes/no)             |<--------------+| - Fetches profiles          |<-------------------+| - Ensures no double swipes  |
+-----------------------------+                +-----------------------------+                     +-----------------------------+
           |                                            | setProfile()                             |
           | swipe(yes/no)                              | getStack()                               |
           V                                            V                                          |
+-----------------------------+                +-----------------------------+                     |
| Swipe Code Blockifier       |                |        Stack Cache          |                     |
| - Batch processes swipes    |                | - Stores cached profiles    |                     |
| - Manages matches           |                | - Optimizes swipe actions   |                     |
+-----------------------------+                | - Preloads nearby stacks    |                     |
           |                                    +-----------------------------+                     |
           | match found                                   ^                                       |
           |                                               |                                       |
           V                                               |                                       |
+-----------------------------+                +-----------------------------+                     |
| Push Notification Service   |                |       Cron Service           |                     |
| - Sends notifications via   |                | - Prefetches profiles        |                     |
|   APNs/FCM for matches      |                | - Runs periodic background   |                     |
+-----------------------------+                |   tasks for caching          |                     |
           ^                                    +-----------------------------+                     |
           |                                                                                           
           |                                                                                           
+-----------------------------+                +-----------------------------+                     +-----------------------------+
|        Swipe DB             |                |        ElasticSearch        |                     |       Profile DB            |
| - Stores swipe records      |                | - Search for profiles       |                     | - Stores user profiles      |
| - {user1, user2, liked}     |                | - Updates swipe queries     |                     | - {name, agePref,           |
+-----------------------------+                +-----------------------------+                     |    genderPref, maxDistance} |
           ^                                                                                       +-----------------------------+
           |                                                                                           
           |                                                                                           
+-----------------------------+                                                                         
|       Swipe Service         |                                                                         
+-----------------------------+                                                                         


Option:Whatsapp:
+-----------------------------+                +-----------------------------+                +-----------------------------+
|           Client            |                |       Load Balancer          |                |         Chat Server         |
| - Sends/receives messages   |                | - Distributes traffic to     |                | - Manages chat sessions     |
| - Connects to chat sessions |--------------->|   chat servers               |--------------->| - Handles real-time messages|
| - Multiple clients connect  |                | - Provides horizontal        |                | - Communicates with Redis   |
+-----------------------------+                |   scalability                |                |   Pub/Sub and Database      |
                                                +-----------------------------+                +-------------+---------------+
                                                                                                             |
                                                                                                    Handles client messages
                                                                                                             |
                                                                                                             V
+-----------------------------+                +-----------------------------+                +-----------------------------+
|     Participant Cache        |<-------------->|        Redis Pub/Sub         |<-------------->|    Database (MySQL)         |
| - Stores active participants |                | - Distributes chat events    |                | - Stores chat logs,         |
|   for quick access           |                |   between chat servers       |                |   participants, messages,   |
| - Used to reduce load on DB  |                | - Synchronizes servers       |                |   and events                |
+-----------------------------+                +-----------------------------+                | - Tables:                   |
                                                                                               |   - Chat                    |
                                                                                               |   - Chat Participant        |
                                                                                               |   - Message                 |
                                                                                               |   - Events                  |
                                                                                               +-----------------------------+
                                                                                                            ^
                                                                                                            |
                                                                                                            |
                                                                                             Publishes/receives events
                                                                                                            |
                                                                                                            V
+-----------------------------+                                                                      +-----------------------------+
|       Cleanup Service        |                                                                      |   Presence Service          |
| - Periodically clears        |                                                                      | - Monitors online status    |
|   inactive participants      |                                                                      | - Updates Participant Cache |
+-----------------------------+                                                                      +-----------------------------+
                                                                                                            ^
                                                                                                            |
                                                                                                            |
                                                                                                 Updates participant status
                                                                                                            |
                                                                                                            V
                                                                                                +-----------------------------+
                                                                                                |     Participant Cache        |
                                                                                                | - Stores active participants |
                                                                                                |   for quick access           |
                                                                                                | - Used to reduce load on DB  |
                                                                                                +-----------------------------+

Option:Youtube

+-----------------------------+                +-----------------------------+                +-----------------------------+
|           Client            |                |     API Gateway &            |                |            CDN               |
| - Uploads video files       |                |      Load Balancer           |                | - Caches frequently accessed |
| - Requests video segments   |<-------------->| - Routing, Authentication,   |<-------------->|   video segments             |
| - Downloads video segments  |                |   Rate Limiting              |                | - Delivers video manifest/   |
|                             |                | - Routes requests to Video   |                |   segments to client         |
+-----------------------------+                |   Service                    |                +-----------------------------+
                                               +-----------------------------+                                             
                                                         |                                   
       Uploads video via pre-signed URL / Requests video manifest and segments
                                                         |
                                                         V
+-----------------------------+                +-----------------------------+                +-----------------------------+
|       Video Service          |                |             S3               |                |   Upload Monitor (Lambda)    |
| - Provides pre-signed URLs   |                | - Stores uploaded video      |<---------------| - Receives S3 event          |
| - Manages video uploads      |--------------->|   files, manifest files,     |                |   notifications             |
| - Handles requests for video |                |   and metadata               |                | - Triggers processing flow   |
|   manifest                   |                | - Allows direct upload via   |                +-----------------------------+
+-----------------------------+                |   pre-signed URLs            |
                                               +-----------------------------+
                                                              |
                                                    Stores processed files
                                                              |
                                                              V
+-----------------------------+                +-----------------------------+                +-----------------------------+
|  Video Processing Service    |                |    Video Metadata DB        |                |     Video Metadata Cache     |
| - Processes uploaded video   |--------------->| - Stores metadata for videos|<-------------->| - Caches video metadata      |
|   files: splitting,          |                | - Metadata includes:        |                |   for quick access           |
|   transcoding, audio         |                |   videoId, uploaderId, name |                |                             |
|   processing, transcript     |                |   description, chunks, URLs |                |                             |
|   generation                 |                +-----------------------------+                +-----------------------------+
| - Builds and stores manifest |
|   files in S3                |
+-----------------------------+
            |                                                        ^
            | Stores manifest files                                  |
            V                                                        |
+-----------------------------+                +-----------------------------+                +-----------------------------+
|             S3              |<---------------+    Build Manifest Files      |                |            CDN              |
| - Stores manifest files     |                | - Generates video manifest   |                | - Caches and delivers video |
+-----------------------------+                |   files based on the video   |                |   manifest and segments     |
                                                | - Marks video upload as      |                +-----------------------------+
                                                |   complete                   |
                                                +-----------------------------+
            ^                                                        |
            |                                                        |
+-----------------------------+                +-----------------------------+
|    Audio Processing          |                |   Transcript Generation     |
| - Processes audio tracks     |                | - Generates transcript files |
|   within the video           |                |   for the video              |
+-----------------------------+                +-----------------------------+
            ^                                                        |
            |                                                        |
+-----------------------------+                +-----------------------------+
|       Transcoding            |                |        Video Splitter        |
| - Transcodes video into      |                | - Splits video into chunks   |
|   multiple resolutions       |                | - Stores chunks in S3        |
| - Stores transcoded chunks   |                +-----------------------------+
|   in S3                      |
+-----------------------------+
            ^
            |
+-----------------------------+
| Video Processing Service    |
+-----------------------------+


                                    +----------------------+
                                    |         Users        |
                                    +----------+-----------+
                                               |
                                               v
                                     +---------+----------+
                                     |     Load Balancer   |
                                     +----------+----------+
                                               |
                               +---------------+---------------+
                               |                               |
                               v                               v
                     +------------------------+     +------------------------+
                     | S3 Storage (Primary)   |     | S3 Storage (Backup)    |
                     +-----------+------------+     +------------+-----------+
                                 |                                |
                                 +-------------+------------------+
                                               |
                                               v
                                     +---------+----------+
                                     |   Upload Service    |
                                     |      (Primary)      |
                                     +----------+----------+
                                               |
                                               v
                                     +---------+----------+
                                     |   Upload Service    |
                                     |      (Backup)       |
                                     +----------+----------+
                                               |
                                               v
                                +--------------+--------------+
                                |                             |
                                v                             v
                  +-------------------------+   +-------------------------+
                  |   Video Chunks (Raw)    |   |     Video Metadata      |
                  | Stored in S3 (Primary)  |   | Kafka (Shard on VideoID)|
                  | Stored in S3 (Backup)   |   +-----------+-------------+
                  +-------------------------+               |
                                                            v
                                                   +--------+--------+
                                                   |       Flink      |
                                                   | Shard on VideoID |
                                                   |     (Primary)    |
                                                   +--------+--------+
                                                            |
                                                            v
                                                   +--------+--------+
                                                   |       Flink      |
                                                   | Shard on VideoID |
                                                   |     (Backup)     |
                                                   +--------+--------+
                                                            |
                                                            v
                                                   +------------------+
                                                   |  Chunk Processors |
                                                   +--------+---------+
                                                            |
                                                            v
                                                   +--------+--------+
                                                   |   Chunk Completer |
                                                   | Kafka (Shard on   |
                                                   |     UserID)       |
                                                   |     (Primary)     |
                                                   +--------+--------+
                                                            |
                                                            v
                                                   +--------+--------+
                                                   |   Chunk Completer |
                                                   | Kafka (Shard on   |
                                                   |     UserID)       |
                                                   |     (Backup)      |
                                                   +--------+--------+
                                                            |
                                                            v
                                                   +--------+--------+
                                                   |       Flink      |
                                                   | Shard on UserID  |
                                                   |     (Primary)    |
                                                   +--------+--------+
                                                            |
                                                            v
                                                   +-------------------+
                                                   | Users/Videos Table |
                                                   |       (MySQL)      |
                                                   | Shard on UserID    |
                                                   |     (Primary)      |
                                                   +-------------------+
                                                            |
                                                            v
                                                   +-------------------+
                                                   | Users/Videos Table |
                                                   |       (MySQL)      |
                                                   | Shard on UserID    |
                                                   |     (Backup)       |
                                                   +-------------------+

                             +------------------------------------------+
                             |    Subscriber Table (MySQL)              |
                             | Shard on UserID (Primary + Backup)       |
                             +-------------------------+----------------+
                                                            |
                                                            v
                                                   +-------------------+
                                                   |  Elasticsearch     |
                                                   |     (Primary)      |
                                                   +---------+---------+
                                                             |
                                                             v
                                                   +---------+---------+
                                                   |  Elasticsearch     |
                                                   |     (Backup)       |
                                                   +-------------------+

                             +------------------------------------------+
                             |  Comment Service (Primary + Backup)      |
                             +-------------------------+----------------+
                                                            |
                                                            v
                                                   +--------+--------+
                                                   |     Load Balancer  |
                                                   +--------+--------+
                                                            |
                                                            v
                                                   +-------------------+
                                                   |   Comments Table   |
                                                   |    (Cassandra)     |
                                                   | Shard on ChannelID,|
                                                   |     VideoID        |
                                                   | Sort on Timestamp  |
                                                   |     (Primary)      |
                                                   +-------------------+
                                                            |
                                                            v
                                                   +-------------------+
                                                   |   Comments Table   |
                                                   |    (Cassandra)     |
                                                   | Shard on ChannelID,|
                                                   |     VideoID        |
                                                   | Sort on Timestamp  |
                                                   |     (Backup)       |
                                                   +-------------------+

                             +--------------------------+
                             | Video Chunks Table (MySQL)|
                             | Shard on UserID, VideoID |
                             |   (Primary + Backup)     |
                             +------------+-------------+
                                          |
                                          v
                                   +------+------+
                                   |     CDN     |
                                   |  (Primary)  |
                                   +------+------+
                                          |
                                          v
                                   +------+------+
                                   |     CDN     |
                                   |  (Backup)   |
                                   +-------------+
```